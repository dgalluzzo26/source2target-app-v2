# Generated by Django 5.2.7 on 2025-10-31 00:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TargetField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=255)),
                ('field_path', models.CharField(max_length=500)),
                ('data_type', models.CharField(max_length=100)),
                ('is_required', models.BooleanField(default=False)),
                ('is_primary_key', models.BooleanField(default=False)),
                ('field_description', models.TextField(blank=True, null=True)),
                ('business_rules', models.TextField(blank=True, null=True)),
                ('example_values', models.JSONField(blank=True, default=list)),
                ('validation_rules', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Target Field',
                'verbose_name_plural': 'Target Fields',
                'db_table': 'mapping_target_fields',
                'ordering': ['schema', 'field_name'],
            },
        ),
        migrations.CreateModel(
            name='SourceTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catalog_name', models.CharField(max_length=255)),
                ('schema_name', models.CharField(max_length=255)),
                ('table_name', models.CharField(max_length=255)),
                ('full_table_name', models.CharField(max_length=765, unique=True)),
                ('table_type', models.CharField(choices=[('TABLE', 'Table'), ('VIEW', 'View'), ('EXTERNAL', 'External Table'), ('TEMPORARY', 'Temporary Table')], default='TABLE', max_length=50)),
                ('table_format', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('owner', models.CharField(blank=True, max_length=255, null=True)),
                ('source_owners', models.TextField(blank=True, help_text='Comma-separated list of users who can access this table', null=True)),
                ('row_count', models.BigIntegerField(blank=True, null=True)),
                ('size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('discovered_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('last_analyzed', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('analysis_status', models.CharField(choices=[('pending', 'Pending Analysis'), ('analyzing', 'Analyzing'), ('completed', 'Analysis Complete'), ('failed', 'Analysis Failed')], default='pending', max_length=20)),
                ('discovered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Source Table',
                'verbose_name_plural': 'Source Tables',
                'db_table': 'mapping_source_tables',
                'ordering': ['catalog_name', 'schema_name', 'table_name'],
            },
        ),
        migrations.CreateModel(
            name='SourceColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_name', models.CharField(max_length=255)),
                ('column_position', models.IntegerField()),
                ('data_type', models.CharField(max_length=100)),
                ('physical_data_type', models.CharField(blank=True, max_length=100, null=True)),
                ('is_nullable', models.BooleanField(default=True)),
                ('is_primary_key', models.BooleanField(default=False)),
                ('is_foreign_key', models.BooleanField(default=False)),
                ('null_count', models.BigIntegerField(blank=True, null=True)),
                ('distinct_count', models.BigIntegerField(blank=True, null=True)),
                ('min_value', models.TextField(blank=True, null=True)),
                ('max_value', models.TextField(blank=True, null=True)),
                ('avg_length', models.FloatField(blank=True, null=True)),
                ('column_comment', models.TextField(blank=True, null=True)),
                ('business_description', models.TextField(blank=True, null=True)),
                ('sample_values', models.JSONField(blank=True, default=list)),
                ('discovered_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='mapping.sourcetable')),
            ],
            options={
                'verbose_name': 'Source Column',
                'verbose_name_plural': 'Source Columns',
                'db_table': 'mapping_source_columns',
                'ordering': ['table', 'column_position'],
            },
        ),
        migrations.CreateModel(
            name='FieldMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mapping_type', models.CharField(choices=[('direct', 'Direct Mapping'), ('transformed', 'Transformed Mapping'), ('calculated', 'Calculated Field'), ('lookup', 'Lookup Mapping'), ('conditional', 'Conditional Mapping')], default='direct', max_length=20)),
                ('transformation_logic', models.TextField(blank=True, null=True)),
                ('transformation_language', models.CharField(choices=[('sql', 'SQL'), ('python', 'Python'), ('spark', 'Spark SQL'), ('custom', 'Custom Logic')], default='sql', max_length=20)),
                ('confidence_score', models.FloatField(blank=True, help_text='AI confidence score for this mapping (0.0 to 1.0)', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('is_validated', models.BooleanField(default=False)),
                ('validation_notes', models.TextField(blank=True, null=True)),
                ('suggested_by_ai', models.BooleanField(default=False)),
                ('ai_reasoning', models.TextField(blank=True, null=True)),
                ('ai_model_version', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_review', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_mappings', to=settings.AUTH_USER_MODEL)),
                ('source_column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mappings', to='mapping.sourcecolumn')),
                ('target_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mappings', to='mapping.targetfield')),
            ],
            options={
                'verbose_name': 'Field Mapping',
                'verbose_name_plural': 'Field Mappings',
                'db_table': 'mapping_field_mappings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100)),
                ('model_version', models.CharField(max_length=50)),
                ('confidence_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('reasoning', models.TextField()),
                ('similarity_score', models.FloatField(blank=True, null=True)),
                ('context_used', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('modified', 'Modified')], default='pending', max_length=20)),
                ('user_feedback', models.TextField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('source_column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_suggestions', to='mapping.sourcecolumn')),
                ('target_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_suggestions', to='mapping.targetfield')),
            ],
            options={
                'verbose_name': 'AI Mapping Suggestion',
                'verbose_name_plural': 'AI Mapping Suggestions',
                'db_table': 'mapping_ai_suggestions',
                'ordering': ['-confidence_score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TargetSchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema_name', models.CharField(max_length=255, unique=True)),
                ('display_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=50)),
                ('schema_type', models.CharField(choices=[('semantic', 'Semantic Layer'), ('dimensional', 'Dimensional Model'), ('normalized', 'Normalized Schema'), ('custom', 'Custom Schema')], default='semantic', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Target Schema',
                'verbose_name_plural': 'Target Schemas',
                'db_table': 'mapping_target_schemas',
                'ordering': ['schema_name'],
            },
        ),
        migrations.AddField(
            model_name='targetfield',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='mapping.targetschema'),
        ),
        migrations.CreateModel(
            name='MappingTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('source_schema_pattern', models.CharField(blank=True, max_length=255, null=True)),
                ('mapping_rules', models.JSONField(default=dict)),
                ('transformation_templates', models.JSONField(default=dict)),
                ('usage_count', models.IntegerField(default=0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('target_schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='mapping.targetschema')),
            ],
            options={
                'verbose_name': 'Mapping Template',
                'verbose_name_plural': 'Mapping Templates',
                'db_table': 'mapping_templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MappingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_name', models.CharField(max_length=255)),
                ('total_columns', models.IntegerField(default=0)),
                ('mapped_columns', models.IntegerField(default=0)),
                ('validated_mappings', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('archived', 'Archived')], default='active', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mapping_sessions', to=settings.AUTH_USER_MODEL)),
                ('source_tables', models.ManyToManyField(blank=True, to='mapping.sourcetable')),
                ('target_schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapping.targetschema')),
            ],
            options={
                'verbose_name': 'Mapping Session',
                'verbose_name_plural': 'Mapping Sessions',
                'db_table': 'mapping_sessions',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddIndex(
            model_name='sourcetable',
            index=models.Index(fields=['catalog_name', 'schema_name'], name='mapping_sou_catalog_ceb399_idx'),
        ),
        migrations.AddIndex(
            model_name='sourcetable',
            index=models.Index(fields=['full_table_name'], name='mapping_sou_full_ta_fc3650_idx'),
        ),
        migrations.AddIndex(
            model_name='sourcetable',
            index=models.Index(fields=['discovered_at'], name='mapping_sou_discove_f993f1_idx'),
        ),
        migrations.AddIndex(
            model_name='sourcecolumn',
            index=models.Index(fields=['table', 'column_position'], name='mapping_sou_table_i_0696fb_idx'),
        ),
        migrations.AddIndex(
            model_name='sourcecolumn',
            index=models.Index(fields=['data_type'], name='mapping_sou_data_ty_574dd2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='sourcecolumn',
            unique_together={('table', 'column_name')},
        ),
        migrations.AddIndex(
            model_name='fieldmapping',
            index=models.Index(fields=['status'], name='mapping_fie_status_efcf6e_idx'),
        ),
        migrations.AddIndex(
            model_name='fieldmapping',
            index=models.Index(fields=['suggested_by_ai'], name='mapping_fie_suggest_c23262_idx'),
        ),
        migrations.AddIndex(
            model_name='fieldmapping',
            index=models.Index(fields=['confidence_score'], name='mapping_fie_confide_996710_idx'),
        ),
        migrations.AddIndex(
            model_name='fieldmapping',
            index=models.Index(fields=['created_at'], name='mapping_fie_created_65d4e6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='fieldmapping',
            unique_together={('source_column', 'target_field')},
        ),
        migrations.AddIndex(
            model_name='aimapping',
            index=models.Index(fields=['confidence_score'], name='mapping_ai__confide_a32120_idx'),
        ),
        migrations.AddIndex(
            model_name='aimapping',
            index=models.Index(fields=['status'], name='mapping_ai__status_c73dfa_idx'),
        ),
        migrations.AddIndex(
            model_name='aimapping',
            index=models.Index(fields=['created_at'], name='mapping_ai__created_fdb211_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='targetfield',
            unique_together={('schema', 'field_name')},
        ),
    ]
